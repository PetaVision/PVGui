HyPerCol "column" = {
    nx = 32;
    ny = 256;
    dt = 1;
    randomSeed = 1234567890;
    stopTime = 4000000;
    progressInterval = 50000;
    outputPath = "output/scratch/";
    checkpointWrite = true;
    checkpointWriteDir = "output/scratch/checkpoints";
    writeProgressToErr = true;
    printTimescales = false;
    verifyWrites = false;
    deleteOlderCheckpoints = true;
    checkpointWriteStepInterval = 5000;
    outputNamesOfLayersAndConns = "layers_n_conns.txt";
    filenamesContainLayerNames = true;
    filenamesContainConnectionNames = true;
};

AudioInputLayer "Source" = {
    type = "AudioInputLayer";
    samplerate = 16000;
    playlist = "input/speech/allspeech_6798.txt";
    shuffle = true;
    listeningTime = 40000;
    fftLayer = true;
    windowStride = 64;
    play = true;
    playheadOffset = 0.0;
    playheadAdvance = 0.3;
    playheadSpeed = 10;
    nxScale = 1;
    nyScale = 1;
    nf = 2;
    valueV = 0;
    phase = 0;
    writeStep = 10;
    initialWriteTime = 10;
};

ANNLayer "ReconS1" = {
    type = "ANNLayer";
    nxScale = 1;
    nyScale = 1;
    nf = 2;
    phase = 3;
    mirrorBCflag = false;
    valueBC = 0;
    InitVType = "ConstantV";
    valueV = 0;
    triggerLayerName = NULL;
    writeStep = 10;
    initialWriteTime = 10;
    sparseLayer = false;
    updateGpu = false;
    dataType = NULL;
    VThresh = -infinity;
    AMin = -infinity;
    AMax = infinity;
    AShift = 0;
    VWidth = 0;
    clearGSynInterval = 0;
};

ANNLayer "ReconS1Error" = {
    type = "ANNLayer";
    nxScale = 1;
    nyScale = 1;
    nf = 2;
    phase = 1;
    mirrorBCflag = false;
    valueBC = 0;
    InitVType = "ConstantV";
    valueV = 0;
    triggerLayerName = NULL;
    writeStep = 2;
    sparseLayer = false;
    updateGpu = false;
    dataType = NULL;
    VThresh = -infinity;
    AMin = -infinity;
    AMax = infinity;
    AShift = 0;
    VWidth = 0;
    clearGSynInterval = 0;
};

HyPerLCALayer "S1" = {
    type = "HyPerLCALayer";
    nxScale = 0.5;
    nyScale = 0.5;
    nf = 256;
    phase = 2;
    mirrorBCflag = false;
    valueBC = 0;
    InitVType = "ConstantV";
    valueV = 0.025;
    triggerLayerName = NULL;
    writeStep = -1;
    initialWriteTime = -1;
    sparseLayer = true;
    writeSparseValues = true;
    updateGpu = true;
    dataType = NULL;
    VThresh = 0.025;
    AMin = 0;
    AMax = infinity;
    AShift = 0;
    VWidth = 100;
    clearGSynInterval = 0;
    timeConstantTau = 500;
    selfInteract = false;
};

IdentConn "ReconS1ToReconS1Error" = {
    type = "IdentConn";
    preLayerName = "ReconS1";
    postLayerName = "ReconS1Error";
    channelCode = 1;
    delay = [0.000000];
    initWeightsFile = NULL;
};

HyPerConn "SourceToReconS1Error" = {
    type = "HyPerConn";
    preLayerName = "Source";
    postLayerName = "ReconS1Error";
    channelCode = 0;
    delay = [0.000000];
    numAxonalArbors = 1;
    plasticityFlag = false;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    sharedWeights = true;
    weightInitType = "OneToOneWeights";
    initWeightsFile = NULL;
    weightInit = 0.0721688;
    updateGSynFromPostPerspective = false;
    pvpatchAccumulateType = "convolve";
    writeStep = -1;
    writeCompressedCheckpoints = false;
    selfFlag = false;
    nxp = 1;
    nyp = 1;
    nfp = 2;
    shrinkPatches = false;
    normalizeMethod = "none";
};

MomentumConn "S1ToReconS1Error" = {
    type = "MomentumConn";
    preLayerName = "S1";
    postLayerName = "ReconS1Error";
    channelCode = -1;
    delay = [0.000000];
    numAxonalArbors = 1;
    plasticityFlag = true;
    convertRateToSpikeCount = false;
    receiveGpu = false;
    sharedWeights = true;
    weightInitType = "UniformRandom";
	wMinInit = -1.0;
	wMaxInit = 1.0;
    initWeightsFile = NULL;
    sparseFraction = 0.9;
    triggerLayerName = NULL;
    triggerOffset = 0;
    updateGSynFromPostPerspective = false;
    pvpatchAccumulateType = "convolve";
	weightUpdatePeriod = 1;
    writeStep = -1;
    writeCompressedCheckpoints = false;
    selfFlag = false;
    combine_dW_with_W_flag = false;
    nxp = 32;
    nyp = 256;
    nfp = 2;
    shrinkPatches = false;
    normalizeMethod = "normalizeL2";
    strength = 1;
    normalizeArborsIndividually = false;
    normalizeOnInitialize = true;
    normalizeOnWeightUpdate = true;
    rMinX = 0;
    rMinY = 0;
    nonnegativeConstraintFlag = false;
    normalize_cutoff = 0;
    normalizeFromPostPerspective = false;
    minL2NormTolerated = 0;
    dWMax = 1.0;
    keepKernelsSynchronized = true;
    normalizeDw = true;
    useMask = false;
    momentumMethod = "viscosity";
    momentumTau = 500;
    momentumDecay = 0;
    batchPeriod = 1;
};

CloneConn "S1ToReconS1" = {
    type = "CloneConn";
    preLayerName = "S1";
    postLayerName = "ReconS1";
    channelCode = 0;
    delay = [0.000000];
    convertRateToSpikeCount = false;
    receiveGpu = false;
    updateGSynFromPostPerspective = false;
    pvpatchAccumulateType = "convolve";
    selfFlag = false;
    originalConnName = "S1ToReconS1Error";
};

TransposeConn "ReconS1ErrorToS1" = {
    type = "TransposeConn";
    preLayerName = "ReconS1Error";
    postLayerName = "S1";
    channelCode = 0;
    delay = [0.000000];
    convertRateToSpikeCount = false;
    receiveGpu = true;
    updateGSynFromPostPerspective = true;
    pvpatchAccumulateType = "convolve";
    writeStep = -1;
    writeCompressedCheckpoints = false;
    selfFlag = false;
    gpuGroupIdx = -1;
    originalConnName = "S1ToReconS1Error";
};


